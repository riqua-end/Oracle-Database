--5_1 조건절 WHERE 없음
SELECT * FROM EMP;
--EX5_2 DEPTNO = 30 만 출력 =은 동등비교 연산자
SELECT * 
    FROM EMP
 WHERE DEPTNO = 30;
--5_3 동등비교 연산 결과를 AND연산 
SELECT * FROM EMP WHERE DEPTNO = 30 AND JOB = 'SALESMAN';
--5_4 동등비교결과를 OR연산
SELECT *
    FROM EMP
    WHERE DEPTNO = 30
    OR JOB = 'CLERK';
--5_5 * 산술연산
SELECT *
    FROM EMP
    WHERE SAL * 12 = 36000;
--5_6 대소 비교 연산    
SELECT *
    FROM EMP
    WHERE SAL >= 3000;
--5_7 문자를 대소 비교 연산 (비교 문자열이 문자 하나일때)    
SELECT * FROM EMP WHERE ENAME >= 'F';

--5_8 문자열을 대소 비교 연산 (비교 문자열이 문자 여러개일때)
SELECT * FROM EMP WHERE ENAME <= 'FORZ';

--5_9 ~ 5_11 등가비교 연산자를 사용하여 출력
SELECT * FROM EMP WHERE SAL != 3000;
SELECT * FROM EMP WHERE SAL <> 3000;
SELECT * FROM EMP WHERE SAL ^= 3000;
--5_12 논리 부정 연산자 NOT
--3000이 아니면 FALSE이고 NOT이면 TRUE이므로 3000이 아닌것만 선택
SELECT * FROM EMP WHERE NOT SAL = 3000;
--5_13 OR 연산자로 여러 조건을 만족하는 데이터 출력
--세개의 동등비교 결과가 하나라도 TRUE이면 선택
SELECT * FROM EMP WHERE JOB = 'MANAGER'
    OR JOB = 'SALESMAN'
    OR JOB = 'CLERK';
--5_14 IN 연산자를 사용하여 출력
SELECT * FROM EMP WHERE JOB IN ('MANAGER','SALESMAN','CLERK');

--5_15 등가 비교 연산자와 AND 연산자를 사용하여 출력
--3개 모두 TRUE인 경우만 선택
SELECT * FROM EMP WHERE JOB != 'MANAGER'
    AND JOB <> 'SALESMAN'
    AND JOB ^= 'CLERK';
--5_16 NOT IN
SELECT * FROM EMP WHERE JOB NOT IN ('MANAGER','SALESMAN','CLERK');

--5_17 BETWEEN A AND B 연산자 ( A ~ B )
SELECT * FROM EMP WHERE SAL >= 2000 AND SAL <= 3000;
--5_18 BETWEEN A AND B 연산자
SELECT * FROM EMP WHERE SAL BETWEEN 2000 AND 3000;
--5_19 BETWEEN A AND B 와 NOT 연산자
SELECT * FROM EMP WHERE SAL NOT BETWEEN 2000 AND 3000;

--5_20 LIKE 연산자 사용하여 출력
SELECT * FROM EMP WHERE ENAME LIKE 'S%';
-- LIKE연산자와 함께 사용할수 있는 와일드카드는  _와 % 
-- _는 어떤 값이든 상관없이 한 개의 문자 데이터를 의미
-- %는 길이와 상관없이 (문자 없는 경우도 포함) 모든 문자 데이터를 의미
--5_21 사원 이름의 두번째 글자가 L인 사원만 출력하기
SELECT * FROM EMP WHERE ENAME LIKE '_L%';
SELECT * FROM EMP WHERE ENAME LIKE '%AM%';
--5_23 AM이 포함되지 않은 사원 데이터 출력 NOT LIKE
SELECT * FROM EMP WHERE ENAME NOT LIKE '%AM%';

--5_24 
SELECT ENAME,SAL,SAL*12+COMM AS ANNSAL,COMM FROM EMP;
--5_25 등가 비교 연산자로 NULL비교하기
SELECT * FROM EMP WHERE COMM = NULL;
--NULL은 데이터 값이 존재하지 않은 상태
--IS NULL은 데이터 상태가 NULL이면 TRUE
--IS NOT NULL 은 데이터 상태가 NULL이 아니면 TRUE

--5_26 IS NULL 연산자
SELECT * FROM EMP WHERE COMM IS NULL;
SELECT * FROM EMP WHERE COMM IS NOT NULL;

--5_27 IS NOT NULL 연산자
SELECT * FROM EMP WHERE MGR IS NOT NULL;

--5_28 AND 연산자와 IS NULL연산자
SELECT * FROM EMP WHERE SAL > NULL AND COMM IS NULL;
--5_29 OR연산자와 IS NULL 연산자
SELECT * FROM EMP WHERE SAL > NULL OR COMM IS NULL;

--5_30 집합 연산자 UNION : 중복이 제거되는 합집합
SELECT EMPNO,ENAME,SAL,DEPTNO FROM EMP WHERE DEPTNO = 10
    UNION
SELECT EMPNO,ENAME,SAL,DEPTNO FROM EMP WHERE DEPTNO = 20;

--5_31 집합 연산자를 사용하여 출력하기 (출력 열 개수가 다를 때)
SELECT EMPNO,ENAME,SAL,DEPTNO FROM EMP WHERE DEPTNO = 10
    UNION
SELECT EMPNO,ENAME,SAL FROM EMP WHERE DEPTNO = 20;

--5_32 집합 연산자 출력 열의 자료형이 다를 때
SELECT EMPNO,ENAME,SAL,DEPTNO FROM EMP WHERE DEPTNO = 10
    UNION
SELECT ENAME,EMPNO,DEPTNO,SAL FROM EMP WHERE DEPTNO = 20;

--5_33 집합 연산자 출력 열의 자료형이 같을때
SELECT EMPNO,ENAME,SAL,DEPTNO FROM EMP WHERE DEPTNO = 10
    UNION
SELECT SAL,JOB,DEPTNO, SAL FROM EMP WHERE DEPTNO = 20;

--5_34 집합 연산자 출력 출력 결과 데이터가 같을 때
SELECT EMPNO,ENAME,SAL,DEPTNO FROM EMP WHERE DEPTNO = 10
UNION
SELECT EMPNO,ENAME,SAL,DEPTNO FROM EMP WHERE DEPTNO = 10;

--5_35 집합 연산자 UNION ALL을 사용하여 출력하기 출력 결과 데이터가 같을 때
-- UNION ALL  : 중복 데이터도 모두 출력함
SELECT EMPNO,ENAME,SAL,DEPTNO FROM EMP WHERE DEPTNO = 10
UNION ALL
SELECT EMPNO,ENAME,SAL,DEPTNO FROM EMP WHERE DEPTNO = 10;

--5_36 집합 연산자 MINUS : 차집합을 의미함 
--첫번째 셀렉트문에 부서번호 10번을 제외한 나머지 결과값이 출력
SELECT EMPNO,ENAME,SAL,DEPTNO FROM EMP
MINUS
SELECT EMPNO,ENAME,SAL,DEPTNO FROM EMP WHERE DEPTNO = 10;

--5_37 집합 연산자 INTERSECT : 교집합을 의미함
SELECT EMPNO,ENAME,SAL,DEPTNO FROM EMP
INTERSECT
SELECT EMPNO,ENAME,SAL,DEPTNO FROM EMP WHERE DEPTNO = 10;

--5_QUIZ
--Q1
SELECT * FROM EMP WHERE ENAME LIKE '%S';

--Q2
SELECT EMPNO,ENAME,JOB,SAL,DEPTNO FROM EMP WHERE DEPTNO = 30 AND JOB IN 'SALESMAN';

--Q3
SELECT EMPNO,ENAME,JOB,SAL,DEPTNO FROM EMP WHERE DEPTNO IN (20,30) AND SAL > 2000;

SELECT EMPNO,ENAME,JOB,SAL,DEPTNO FROM EMP WHERE DEPTNO = 20 AND SAL > 2000
UNION
SELECT EMPNO,ENAME,JOB,SAL,DEPTNO FROM EMP WHERE DEPTNO = 30 AND SAL > 2000;

--Q4
SELECT * FROM EMP WHERE SAL < 2000 OR SAL > 3000;
SELECT * FROM EMP WHERE SAL NOT BETWEEN 2000 AND 3000;

--Q5
SELECT ENAME,EMPNO,SAL,DEPTNO FROM EMP WHERE DEPTNO = 30
    AND ENAME LIKE '%E%'
    AND SAL NOT BETWEEN 1000 AND 2000;
    
--Q6
SELECT * FROM EMP WHERE COMM IS NULL
AND MGR IS NOT NULL
AND JOB IN ('MANAGER','CLERK')
AND ENAME NOT LIKE ('_L%');