--8_1
--모든 가능한 두 테이블의 조합 경우가 출력(데카르트곱)
--A테이블 행개수 * B테이블 행개수
SELECT *
FROM EMP,DEPT
ORDER BY EMPNO;

--8_2
--두 테이블의 관련이 있는 특정 열을 기준(동등비교(으로 조인(EQUAL,INNER,SIMPLE조인)
--제목줄에 두개 테이블의 열 이름이 같은 것은 자동으로 하나는 _1이 붙음
SELECT *
FROM EMP,DEPT
WHERE EMP.DEPTNO = DEPT.DEPTNO
ORDER BY EMPNO;

--8_3
--TABLE이름에 별칭 사용
--TABLE별칭 사용시 컬럼명에도 테이블의 별칭 이이ㅛㅇ
SELECT *
FROM EMP E, DEPT D
WHERE E.DEPTNO = D.DEPTNO
ORDER BY EMPNO;

--8_4
--두 테이블의 컬럼명이 같은 것을 바로 사용하면 에러
SELECT EMPNO,ENAME,DEPTNO,DNAME,LOC
FROM EMP E, DEPT D
WHERE E.DEPTNO = D.DEPTNO;

--8_5
--컬럼명에 테이블 별칭을 사용하여 컬럼이 속한 테이블을 지정
SELECT E.EMPNO,E.ENAME,D.DEPTNO,D.DNAME,D.LOC
FROM EMP E, DEPT D
WHERE E.DEPTNO = D.DEPTNO
ORDER BY D.DEPTNO,E.EMPNO;

--8_6
SELECT E.EMPNO,E.ENAME,E.SAL,D.DEPTNO,D.DNAME,D.LOC
FROM EMP E, DEPT D
WHERE E.DEPTNO = D.DEPTNO
AND SAL >= 3000;

--8_7
--연산자가 = 아닌 BETWEEN AND를 사용하므로 비등가 조인(1:N조인)
SELECT *
FROM EMP E, SALGRADE S
WHERE E.SAL BETWEEN S.LOSAL AND S.HISAL;

--8_8
--SELF JOIN은 일종의 등가 조인
SELECT E1.EMPNO,E1.ENAME,E1.MGR,
        E2.EMPNO AS MGR_EMPNO,
        E2.ENAME AS MGR_ENAME
    FROM EMP E1, EMP E2 --테이블이 같으므로 자체조인(셀프조인)
WHERE E1.MGR = E2.EMPNO;

--8_9
--LEFT OUTER JOIN
--왼쪽의 NULL을 포함한 모두 행을 포함하고 조건에 안맞는 오른쪽 행은 NULL
SELECT E1.EMPNO,E1.ENAME,E1.MGR,
        E2.EMPNO AS MGR_EMPNO,
        E2.ENAME AS MGR_ENAME
FROM EMP E1,EMP E2
WHERE E1.MGR = E2.EMPNO(+)
ORDER BY E1.EMPNO;

--8_10
--RIGHT OUTER JOIN
--OUTER JOIN이 아닌 등가조인과 자체조인은 INNER JOIN
--오른쪽의 모든 행을 포함하여 조인(조건에 안맞는 왼쪽의 행은 NULL)
SELECT E1.EMPNO,E1.ENAME,E1.MGR,
        E2.EMPNO AS MGR_EMPNO,
        E2.ENAME AS MGR_ENAME
FROM EMP E1,EMP E2
WHERE E1.MGR(+) = E2.EMPNO
ORDER BY E1.EMPNO;

--8_11
SELECT E.EMPNO,E.ENAME,E.JOB,E.MGR,E.HIREDATE,E.SAL,E.COMM,
        DEPTNO,D.DNAME,D.LOC
FROM EMP E NATURAL JOIN DEPT D
ORDER BY DEPTNO, E.EMPNO;

--8_12
--SQL-99
--등가 조인,동등 비교 대상 컬럼명이 두 테이블에 같아야 하고 별칭 사용 안됨
--WHERE 절로 동등 비교 안함,JOIN을 FROM절에서 함
SELECT E.EMPNO,E.ENAME,E.JOB,E.MGR,E.HIREDATE,E.SAL,E.COMM,
        DEPTNO,D.DNAME,D.LOC
FROM EMP E JOIN DEPT D USING (DEPTNO)
WHERE SAL >= 3000
ORDER BY DEPTNO,E.EMPNO;

--8_13
SELECT E.EMPNO,E.ENAME,E.JOB,E.MGR,E.HIREDATE,E.SAL,E.COMM,
        E.DEPTNO,D.DNAME,D.LOC
    FROM EMP E JOIN DEPT D ON (E.DEPTNO = D.DEPTNO)
WHERE SAL <= 3000
ORDER BY E.DEPTNO,EMPNO;

--8_14
SELECT E1.EMPNO,E1.ENAME,E1.MGR,
        E2.EMPNO AS MGR_EMPNO,
        E2.ENAME AS MGR_ENAME
    FROM EMP E1 LEFT OUTER JOIN EMP E2 ON (E1.MGR = E2.EMPNO)
ORDER BY E1.EMPNO;

--8_15
--SQL-99로 FROM절에서 JOIN ON형태로 사용
SELECT E1.EMPNO,E1.ENAME,E1.MGR,
        E2.EMPNO AS MGR_EMPNO,
        E2.ENAME AS MGR_ENAME
    FROM EMP E1 RIGHT OUTER JOIN EMP E2 ON (E1.MGR = E2.EMPNO)
ORDER BY E1.EMPNO;

--8_16
--SQL-99로 FROM절에서 JOIN ON형태로 사용
--FULL OUTER JOIN 은 기존 방식은 없고 UNION집합 연사자를 사용
SELECT E1.EMPNO,E1.ENAME,E1.MGR,
        E2.EMPNO AS MGR_EMPNO,
        E2.ENAME AS MGR_ENAME
    FROM EMP E1 FULL OUTER JOIN EMP E2 ON (E1.MGR=E2.EMPNO)
ORDER BY E1.EMPNO;